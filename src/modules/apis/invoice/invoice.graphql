scalar Date

type Invoice {
  nr: Int!
  isStorno: Boolean
  stornoRef: Int
  currency: String
  amount: Int
  date: Date
  paid: Boolean
  customer: Customer!
  projects: [Project]
}

type Query {
  invoices: [Invoice]
  invoice(nr: Int): Invoice!
}

type Mutation {
  create(
    currency: String
    amount: Int
    date: Date
    customer: Int
    projects: [Int]
  ): Invoice

  update(
    nr: Int
    currency: String
    amount: Int
    date: Date
    customer: Int
    projects: Int
  ): Invoice

  markAsPaid(nr: Int, paid: Boolean): Boolean

  createStorno(nr: Int): Boolean
}
